/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as AppImport } from "./routes/app";
import { Route as AppIndexImport } from "./routes/app/index";

// Create/Update Routes

const AppRoute = AppImport.update({
  id: "/app",
  path: "/app",
  getParentRoute: () => rootRoute,
} as any);

const AppIndexRoute = AppIndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => AppRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/app": {
      id: "/app";
      path: "/app";
      fullPath: "/app";
      preLoaderRoute: typeof AppImport;
      parentRoute: typeof rootRoute;
    };
    "/app/": {
      id: "/app/";
      path: "/";
      fullPath: "/app/";
      preLoaderRoute: typeof AppIndexImport;
      parentRoute: typeof AppImport;
    };
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppIndexRoute: typeof AppIndexRoute;
}

const AppRouteChildren: AppRouteChildren = {
  AppIndexRoute: AppIndexRoute,
};

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren);

export interface FileRoutesByFullPath {
  "/app": typeof AppRouteWithChildren;
  "/app/": typeof AppIndexRoute;
}

export interface FileRoutesByTo {
  "/app": typeof AppIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/app": typeof AppRouteWithChildren;
  "/app/": typeof AppIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "/app" | "/app/";
  fileRoutesByTo: FileRoutesByTo;
  to: "/app";
  id: "__root__" | "/app" | "/app/";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren;
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/app"
      ]
    },
    "/app": {
      "filePath": "app.tsx",
      "children": [
        "/app/"
      ]
    },
    "/app/": {
      "filePath": "app/index.tsx",
      "parent": "/app"
    }
  }
}
ROUTE_MANIFEST_END */
